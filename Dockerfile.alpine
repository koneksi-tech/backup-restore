# Lightweight Alpine-based Dockerfile
# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git gcc musl-dev sqlite-dev

WORKDIR /build

# Copy and download dependencies
COPY go.mod go.sum ./
RUN go mod download

# Copy source
COPY . .

# Build static binary
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 \
    go build -mod=mod \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o koneksi-backup cmd/koneksi-backup/main.go

# Final stage - minimal image
FROM scratch

# Copy SSL certificates
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy static binary
COPY --from=builder /build/koneksi-backup /koneksi-backup

# Copy SQLite libraries if needed
COPY --from=builder /lib/ld-musl-x86_64.so.1 /lib/
COPY --from=builder /usr/lib/libsqlite3.so.0 /usr/lib/

VOLUME ["/data", "/reports", "/backup"]

ENTRYPOINT ["/koneksi-backup"]
CMD ["run", "-c", "/data/config.yaml"]