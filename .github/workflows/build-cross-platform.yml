name: Cross-Platform Build

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

env:
  GO_VERSION: '1.21'
  PROJECT_NAME: 'koneksi-backup'

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux builds with CGO for SQLite
          - os: linux
            arch: amd64
            runner: ubuntu-latest
          - os: linux
            arch: arm64
            runner: ubuntu-latest
          
          # Windows builds with CGO
          - os: windows
            arch: amd64
            runner: windows-latest
          
          # macOS builds with CGO
          - os: darwin
            arch: amd64
            runner: macos-latest
          - os: darwin
            arch: arm64
            runner: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod download

      - name: Install build tools (Linux)
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Install build tools (Windows)
        if: matrix.os == 'windows'
        run: |
          choco install mingw -y
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 1
        run: |
          # Set output filename
          OUTPUT_NAME="${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          
          # Cross-compilation settings for Linux ARM64
          if [ "${{ matrix.os }}" = "linux" ] && [ "${{ matrix.arch }}" = "arm64" ]; then
            export CC=aarch64-linux-gnu-gcc
            export CXX=aarch64-linux-gnu-g++
          fi
          
          # Build the binary
          echo "Building $OUTPUT_NAME..."
          go build -ldflags="-s -w" -o "$OUTPUT_NAME" ./cmd/koneksi-backup
          
          # Verify the binary was created
          ls -la "$OUTPUT_NAME"
        shell: bash

      - name: Create archive
        run: |
          OUTPUT_NAME="${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}"
          
          # Create README for the archive
          cat > README-${{ matrix.os }}.md << EOF
          # Koneksi Backup CLI
          
          Platform: ${{ matrix.os }}-${{ matrix.arch }}
          
          ## Quick Start
          
          1. Initialize configuration:
             \`\`\`
             $(if [ "${{ matrix.os }}" = "windows" ]; then echo ".\\$OUTPUT_NAME.exe init"; else echo "./$OUTPUT_NAME init"; fi)
             \`\`\`
          
          2. Edit configuration file:
             - Windows: \`%USERPROFILE%\\.koneksi-backup\\config.yaml\`
             - Linux/macOS: \`~/.koneksi-backup/config.yaml\`
          
          3. Run backup service:
             \`\`\`
             $(if [ "${{ matrix.os }}" = "windows" ]; then echo ".\\$OUTPUT_NAME.exe run"; else echo "./$OUTPUT_NAME run"; fi)
             \`\`\`
          
          For more information, see: https://github.com/koneksi/backup-cli
          EOF
          
          # Create archive
          if [ "${{ matrix.os }}" = "windows" ]; then
            7z a "$OUTPUT_NAME.zip" "$OUTPUT_NAME.exe" "README-${{ matrix.os }}.md"
          else
            tar -czf "$OUTPUT_NAME.tar.gz" "$OUTPUT_NAME" "README-${{ matrix.os }}.md"
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            *.zip
            *.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release
          find ./artifacts -name "*.zip" -o -name "*.tar.gz" | while read file; do
            cp "$file" ./release/
          done
          ls -la ./release/

      - name: Calculate checksums
        run: |
          cd release
          sha256sum * > SHA256SUMS.txt
          cat SHA256SUMS.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation
            
            ### Windows
            ```powershell
            # Download and extract
            Invoke-WebRequest -Uri "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/koneksi-backup-windows-amd64.zip" -OutFile "koneksi-backup.zip"
            Expand-Archive -Path "koneksi-backup.zip" -DestinationPath "."
            
            # Initialize
            .\koneksi-backup-windows-amd64.exe init
            ```
            
            ### Linux
            ```bash
            # Download and extract
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/koneksi-backup-linux-amd64.tar.gz
            tar -xzf koneksi-backup-linux-amd64.tar.gz
            chmod +x koneksi-backup-linux-amd64
            
            # Initialize
            ./koneksi-backup-linux-amd64 init
            ```
            
            ### macOS
            ```bash
            # Download and extract
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/koneksi-backup-darwin-amd64.tar.gz
            tar -xzf koneksi-backup-darwin-amd64.tar.gz
            chmod +x koneksi-backup-darwin-amd64
            
            # Initialize
            ./koneksi-backup-darwin-amd64 init
            ```
            
            ## Checksums
            
            Verify your download with the SHA256SUMS.txt file included in the release.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}